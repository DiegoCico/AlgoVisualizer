# Sorting Visualization Tool

## Overview

The **Sorting Visualization Tool** is a Python application that graphically demonstrates how various sorting algorithms work. It helps users understand the mechanics behind each algorithm through dynamic visualizations and interactive controls.

## Sorting Algorithms

| Algorithm               | Description                                                                                       |
|-------------------------|---------------------------------------------------------------------------------------------------|
| **Selection Sort**     | Selects the minimum element from the unsorted portion and swaps it with the first unsorted element.|
| **Bubble Sort**        | Repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order.|
| **Insertion Sort**     | Builds the sorted array one element at a time by inserting elements into their correct position.   |
| **Heap Sort**          | Utilizes a binary heap data structure to sort elements efficiently.                              |
| **Quick Sort**         | Employs the divide-and-conquer strategy by selecting a pivot element and partitioning the array.   |
| **Merge Sort**         | Divides the array into halves, recursively sorts them, and then merges the sorted halves.          |
| **Shell Sort**         | An optimization of insertion sort that allows the exchange of items far apart by using a gap sequence.|
| **Counting Sort**      | Counts the number of occurrences of each unique element and calculates positions based on counts.  |
| **Radix Sort**         | Sorts numbers digit by digit starting from the least significant digit to the most significant.    |
| **Cocktail Shaker Sort**| A variation of bubble sort that sorts in both directions on each pass through the list.            |

## Interactive Controls

Each visualization window includes the following controls:

- **Play**: Automatically progresses through the sorting steps.
- **Stop**: Halts the automatic progression.
- **Back**: Reverts the visualization to the previous step.
- **Forward**: Advances the visualization to the next step.


